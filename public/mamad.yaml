apiVersion: v1
kind: Secret
metadata:
  name: secret-{name-of-the-deployment}
  namespace: complex
data:
  STOREID: {base64-encoded-storeid}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    app: {name-of-the-deployment}
  name: {name-of-the-deployment}
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {name-of-the-deployment}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {name-of-the-deployment}
        name: {name-of-the-deployment}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/cloud-container-g2
                    operator: In
                    values:
                      - "true"
      containers:
        - name: {name-of-the-deployment}
          image: username/image:version
          imagePullPolicy: IfNotPresent
          env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: shared-secret
                  key: MONGODB_URI
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: shared-secret
                  key: JWT_SECRET
            - name: VPS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: shared-secret
                  key: VPS_TOKEN
            - name: VPS_URL
              valueFrom:
                secretKeyRef:
                  name: shared-secret
                  key: VPS_URL
            - name: STOREID
              valueFrom:
                secretKeyRef:
                  name: secret-{name-of-the-deployment}
                  key: STOREID
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2G
            requests:
              cpu: "1"
              memory: 2G
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: role
          operator: Equal
          value: cloud-container-g2
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {name-of-the-deployment}
  name: {name-of-the-deployment}
spec:
  clusterIP: None
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: {name-of-the-deployment}
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {name-of-the-deployment}-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: {name-of-the-deployment}-5aab14d2ac-complex.apps.ir-central1.arvancaas.ir
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {name-of-the-deployment}
                port:
                  number: 80